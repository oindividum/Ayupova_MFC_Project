package org.example.popitka2.service;


import jakarta.transaction.Transactional;
import org.example.popitka2.moskvich_card.MoskvichCardRequest;
import org.example.popitka2.repository.MoskvichCardRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.time.LocalDate;

import java.util.List;

@Service
public class MoskvichCardService {
    private final MoskvichCardRepository moskvichCardRepository;

    @Autowired
    public MoskvichCardService(MoskvichCardRepository moskvichCardRepository) {
        this.moskvichCardRepository = moskvichCardRepository;
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –∑–∞—è–≤–∫–∏
    private String generateRequestNumber() {
        return "MC-" + LocalDate.now().getYear() + "-" + (int)(Math.random() * 9000 + 1000);
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏
    public void createRequest(MoskvichCardRequest request) {
        request.setRequestNumber(generateRequestNumber());
        request.setStatus("–í –æ–∂–∏–¥–∞–Ω–∏–∏");
        moskvichCardRepository.save(request); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –≤–º–µ—Å—Ç–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫
    public List<MoskvichCardRequest> getAllRequests() {
        return moskvichCardRepository.findAll();
    }

    // –ü–æ–∏—Å–∫ –∑–∞—è–≤–∫–∏ –ø–æ –Ω–æ–º–µ—Ä—É
    public MoskvichCardRequest findByRequestNumber(String requestNumber) {
        List<MoskvichCardRequest> requests = moskvichCardRepository.findByRequestNumber(requestNumber);

        if (requests.isEmpty()) {
            throw new RuntimeException("‚ùå –û—à–∏–±–∫–∞: –ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
        } else if (requests.size() > 1) {
            throw new RuntimeException("‚ùå –û—à–∏–±–∫–∞: –ù–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞—è–≤–æ–∫ —Å –æ–¥–Ω–∏–º –Ω–æ–º–µ—Ä–æ–º! –ü—Ä–æ–≤–µ—Ä—å –¥–∞–Ω–Ω—ã–µ!");
        }

        return requests.get(0); // –ë–µ—Ä—ë–º –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –∑–∞—è–≤–∫—É
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏
    @Transactional
    public void updateCardStatus(Long requestId, String newStatus) {
        MoskvichCardRequest request = moskvichCardRepository.findById(requestId)
                .orElseThrow(() -> new RuntimeException("‚ùå –û—à–∏–±–∫–∞: –ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"));

        request.setStatus(newStatus); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
        moskvichCardRepository.save(request);
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞—Ä—Ç—ã –ø–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    public String getCardStatusByUsername(String username) {
        return moskvichCardRepository.findByUserUsername(username)
                .map(MoskvichCardRequest::getStatus)
                .orElse("‚ùå –ö–∞—Ä—Ç–∞ –Ω–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞");
    }

    //  –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –∑–∞—è–≤–∫–∏ –ø–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    public String getRequestNumberByUsername(String username) {
        String requestNumber = moskvichCardRepository.findRequestNumberByUsername(username);
        System.out.println("üîπ –ù–∞–π–¥–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ –¥–ª—è " + username + ": " + requestNumber);
        return requestNumber != null ? requestNumber : "‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫";
    }

    //  –ü–æ–∏—Å–∫ –∑–∞—è–≤–∫–∏ –ø–æ ID
    public MoskvichCardRequest findByRequestId(Long id) {
        return moskvichCardRepository.findById(id)
                .orElseThrow(() -> new RuntimeException("‚ùå –û—à–∏–±–∫–∞: –ó–∞—è–≤–∫–∞ —Å ID " + id + " –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"));
    }
}
