package org.example.popitka2.service;

import org.example.popitka2.repository.AppointmentRepository;
import org.example.popitka2.repository.UserRepository;
import org.example.popitka2.repository.MoskvichCardRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

@Service
public class AnalyticsService {

    private final AppointmentRepository appointmentRepository;

    public AnalyticsService(AppointmentRepository appointmentRepository) {
        this.appointmentRepository = appointmentRepository;
    }
    @Autowired
    private UserRepository userRepository;

    @Autowired
    private MoskvichCardRepository moskvichCardRepository;

    // –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    public long getTotalUsers() {
        return userRepository.countUsers();
    }

    //  –ü–æ–ª—É—á–∞–µ–º —Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫
    public Double getAvgProcessingTime() {
        return moskvichCardRepository.getAverageProcessingTime();
    }

    public Map<String, Integer> getAppointmentStats() {
        Map<String, Long> originalStats = new HashMap<>();
        originalStats.put("–ó–∞–ø–∏—Å–∞–Ω", appointmentRepository.countByStatus("–ó–∞–ø–∏—Å–∞–Ω"));
        originalStats.put("‚úÖ –ó–∞–ø–∏—Å–∞–Ω", appointmentRepository.countByStatus("‚úÖ –ó–∞–ø–∏—Å–∞–Ω"));
        originalStats.put("‚ùó –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è", appointmentRepository.countByStatus("‚ùó –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"));
        originalStats.put("–ó–∞–≤–µ—Ä—à–µ–Ω–æ", appointmentRepository.countByStatus("–ó–∞–≤–µ—Ä—à–µ–Ω–æ"));
        originalStats.put("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ", appointmentRepository.countByStatus("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"));

        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º Long –≤ Integer
        return originalStats.entrySet().stream()
                .collect(Collectors.toMap(Map.Entry::getKey, e -> e.getValue().intValue()));
    }

    public void printAvailableStatuses() {
        List<String> statuses = appointmentRepository.findAllStatuses();
        System.out.println("üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã –≤ –ë–î: " + statuses);
    }


}
